<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Hieu‚ò†Ô∏è Control Panel</title>
  <style>
    body { font-family: -apple-system, BlinkMacSystemFont, sans-serif; background: #1a1a1a; color: #eee;
           display: flex; align-items: center; justify-content: center; height: 100vh; margin: 0;
           flex-direction: column; }
    .hidden { display: none; }
    input[type=password], button { padding: 12px; font-size: 18px; border: none; border-radius: 10px; }
    input[type=password] { width: 80%; background: #333; color: #eee; }
    button {
      background: linear-gradient(to right, #330000, #660000);
      color: #fff; margin-top: 20px;
      transition: background 0.3s;
    }
    button:hover { background: linear-gradient(to right, #660000, #990000); }

    .switch-container { width: 80%; max-width: 400px; margin-top: 20px; }
    .switch {
      display: flex; justify-content: space-between; align-items: center;
      margin: 15px 0; padding: 10px; background: #222; border: 1px solid #444;
      border-radius: 8px;
    }
    .switch input[type=checkbox] {
      width: 50px; height: 25px; -webkit-appearance: none;
      background: #444; border-radius: 15px; position: relative;
      outline: none; cursor: pointer;
      transition: background 0.4s;
    }
    .switch input:checked { background: red; }
    .switch input:checked::after {
      left: 25px; background: crimson;
    }
    .switch input::after {
      content: ""; position: absolute; width: 23px; height: 23px;
      background: #eee; border-radius: 50%;
      top: 1px; left: 1px; transition: left 0.4s;
    }
    .label-text { width: 100px; }

    .slider-container {
      margin: 20px; text-align: left;
      width: 80%; max-width: 400px;
    }
    .slider-container input {
      width: 100%;
      -webkit-appearance: none;
      height: 10px;
      border-radius: 5px;
      background: #444;
      outline: none;
    }
    .slider-container input::-webkit-slider-thumb {
      -webkit-appearance: none;
      width: 20px; height: 20px;
      border-radius: 50%;
      background: crimson; cursor: pointer;
    }

    #status {
      margin-top: 20px;
      font-size: 18px;
      color: #ff4444;
    }
    .spinner {
      border: 4px solid #333;
      border-radius: 50%;
      border-top: 4px solid crimson;
      width: 30px; height: 30px;
      animation: spin 1s linear infinite;
      margin: 0 auto;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>

  <div id="password-screen">
    <h2>üîí Nh·∫≠p m·∫≠t kh·∫©u</h2>
    <input type="password" id="password" placeholder="..." /><br/>
    <button onclick="checkPassword()">X√°c nh·∫≠n</button>
    <p id="error" style="color: crimson;"></p>
  </div>

  <div id="dashboard" class="hidden">
    <h2>üîß B·∫£ng ƒëi·ªÅu khi·ªÉn</h2>
    <div class="switch-container">
      <div class="switch"><span class="label-text" id="label1">off</span><input type="checkbox" onchange="updateLabel(1,'ghim ƒë·∫ßu')" /></div>
      <div class="switch"><span class="label-text" id="label2">off</span><input type="checkbox" onchange="updateLabel(2,'nh·∫π t√¢m')" /></div>
      <div class="switch"><span class="label-text" id="label3">off</span><input type="checkbox" onchange="updateLabel(3,'ƒë·∫°n th·∫≥ng')" /></div>
    </div>

    <div class="slider-container">
      <label>dpi: <span id="dpiValue">50</span></label>
      <input type="range" min="0" max="100" value="50" id="dpiSlider" oninput="updateDpi(this.value)" />
    </div>

    <button id="activateBtn" onclick="activate()">K√≠ch ho·∫°t</button>

    <div id="status" class="hidden">
      <div class="spinner"></div>
      <p id="statusText"></p>
    </div>
  </div>

<script>
function checkPassword() {
  const pw = document.getElementById('password').value.trim();
  if (pw === 'Hieu123') {
    document.getElementById('password-screen').classList.add('hidden');
    document.getElementById('dashboard').classList.remove('hidden');
  } else {
    document.getElementById('error').innerText = 'Sai m·∫≠t kh·∫©u!';
  }
}

function updateLabel(n, textOn) {
  const cb = document.querySelectorAll('.switch input')[n-1];
  document.getElementById('label'+n).innerText = cb.checked ? textOn : 'off';
}

function updateDpi(val) {
  document.getElementById('dpiValue').innerText = val;
}

function activate() {
  const btn = document.getElementById('activateBtn');
  btn.disabled = true;

  const status = document.getElementById('status');
  const txt = document.getElementById('statusText');
  status.classList.remove('hidden');

  txt.innerText = 'ƒêang t·∫£i...';
  setTimeout(() => {
    txt.innerText = 'ƒêang kh·ªüi ch·∫°y Free Fire...';
    setTimeout(() => {
      window.location.href = 'freefire://';
    }, 2000);
  }, 2000);
}
</script>

</body>
</html>
